{"version":3,"sources":["App/TopAppbar/style.js","App/TopAppbar/TopAppbar.js","App/util/api.js","App/SkillList/style.js","App/SkillList/SkillList.js","App/TemplateList/style.js","App/TemplateList/TemplateList.js","App/TemplatePage/style.js","App/TemplatePage/TemplatePage.js","App/BidTemplate.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","text","padding","spacing","paper","paddingTop","minHeight","paddingBottom","dlgpaper","list","marginBottom","subheader","backgroundColor","palette","background","topappBar","top","bottom","bottomappBar","grow","flexGrow","fabButton","position","zIndex","left","right","margin","templatelist","textOverflow","skill_image","width","height","borderRadius","TopAppbar","props","history","useHistory","classes","AppBar","color","className","Toolbar","Typography","variant","skill","IconButton","edge","aria-label","onClick","goBack","push","BASEURL","process","SERVER_URL","getSkills","getTemplateBySkillId","id","getTemplate","getAllTemplate","SkillList","useState","setSkill","useEffect","axios","get","api","then","res","status","data","console","log","catch","err","Paper","square","List","map","Fragment","key","ListItem","button","ListItemAvatar","Avatar","alt","src","img_path","ListItemText","primary","name","root","display","small","large","copyIcon","typoContent","textAlign","appearance","whiteSpace","overflowWrap","maxHeight","overflow","templateTitle","fontWeight","textShadow","cursor","truncate","border","Alert","elevation","TemplateList","useParams","open","setOpen","templates","setTemplates","handleClose","TemplateTitle","style","template","title","skills","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","handleCopy","content","TemplateContent","secondary","Snackbar","autoHideDuration","onClose","severity","templateInput","textRef","React","createRef","TemplatePage","isAdd","setAdd","setSkills","edit","setEdit","setText","setTitle","event","reason","TextField","fullWidth","multiline","inputRef","rowsMax","disabled","onChange","e","target","sendData","post","MenuAppBar","CssBaseline","path","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b2e04dde.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingTop: 65,\r\n    minHeight:'100vh',\r\n    paddingBottom:10\r\n  },\r\n  dlgpaper: {\r\n    paddingTop: 65,\r\n    paddingBottom:10\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  topappBar: {\r\n    top: 0,\r\n    bottom: 'auto',\r\n  },\r\n  bottomappBar: {\r\n    top: 'auto',\r\n    bottom:0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n  templatelist:{\r\n    textOverflow:'ellipsis'\r\n  },\r\n  skill_image:{\r\n    width:'45px',\r\n    height:'45px',\r\n    background:'#eee',\r\n    borderRadius:'50%'\r\n  }\r\n}));\r\nexport default useStyles;","import React from 'react';\r\nimport {\r\n    useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nimport LeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport useStyles from './style.js';\r\nconst TopAppbar = (props) => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const showSkillsPage= () => {\r\n        history.push('/skills')\r\n    }\r\n    const handleGoBack = () => {\r\n      history.goBack();\r\n    } \r\n    return (\r\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.topappBar}>\r\n        <Toolbar>\r\n            <Typography variant={'h6'} >\r\n                {props.skill}\r\n            </Typography>\r\n                <IconButton \r\n                    edge=\"start\" \r\n                    color=\"inherit\" \r\n                    aria-label=\"open drawer\"  \r\n                    onClick={handleGoBack}>\r\n                <LeftIcon />\r\n            </IconButton>\r\n            <div className={classes.grow} />\r\n                <IconButton \r\n                    edge=\"start\" \r\n                    color=\"inherit\" \r\n                    aria-label=\"open drawer\"  \r\n                    onClick={showSkillsPage}>\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    </AppBar>\r\n    )\r\n}\r\nexport default TopAppbar;","const BASEURL =  process.env.SERVER_URL|| 'http://192.168.107.34:721';\r\nconst getTemplateBySkillId =(id)=>{\r\n    return BASEURL+'/api/skill/'+id+'/template';\r\n}\r\nconst getTemplate = (id)=>{\r\n    return BASEURL+'/api/template/'+id;\r\n}\r\nexport default {\r\n    getSkills:`${BASEURL}/api/skill`,\r\n    getTemplateBySkillId:getTemplateBySkillId,\r\n    getTemplate:getTemplate,\r\n    getAllTemplate:`${BASEURL}/api/template`,\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingTop: 65,\r\n    minHeight:'100vh',\r\n    paddingBottom:10\r\n  },\r\n  dlgpaper: {\r\n    paddingTop: 65,\r\n    paddingBottom:10\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  topappBar: {\r\n    top: 0,\r\n    bottom: 'auto',\r\n  },\r\n  bottomappBar: {\r\n    top: 'auto',\r\n    bottom:0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n  templatelist:{\r\n    textOverflow:'ellipsis'\r\n  },\r\n  skill_image:{\r\n    width:'45px',\r\n    height:'45px',\r\n    background:'#eee',\r\n    borderRadius:'50%'\r\n  }\r\n}));\r\nexport default useStyles;","import React ,{useState,useEffect} from 'react';\r\nimport {\r\n    useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    Paper,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    Avatar,\r\n    ListItemText\r\n} from '@material-ui/core';\r\nimport api from './../util/api';\r\nimport useStyles from './style.js';\r\n\r\nconst SkillList  = (props) =>{\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n      const [skill ,setSkill] = useState([]);\r\n      useEffect(()=> {\r\n        axios.get(api.getSkills)\r\n          .then((res)=>{\r\n            if(res.status===200){\r\n              setSkill(res.data);\r\n            }else{\r\n              console.log(res.data);\r\n            }\r\n          })\r\n          .catch((err)=>{\r\n            console.log(err);\r\n          })\r\n      },[props])\r\n      const handleSkillClick = (id)=>{\r\n        history.push(`/skills/${id}`)\r\n      }\r\n        return (\r\n            <Paper square className={classes.paper}>\r\n                <List className={classes.list}>\r\n                    {skill.map((skill) => (\r\n                        <React.Fragment key={skill.id} >\r\n                            <ListItem button className={classes.templatelist} onClick={()=>handleSkillClick(skill.id)}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt=\"Profile Picture\" src={skill.img_path} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={skill.name}/>\r\n                            </ListItem>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </List>\r\n            </Paper>\r\n        )\r\n}\r\nexport default SkillList;","import { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\theight:'30px',\r\n\t\t'& > *': {\r\n\t\tmargin: theme.spacing(1),\r\n\t\t},\r\n\t},\r\n\tsmall: {\r\n\t\twidth: theme.spacing(3),\r\n\t\theight: theme.spacing(3),\r\n\t},\r\n\tlarge: {\r\n\t\twidth: theme.spacing(7),\r\n\t\theight: theme.spacing(7),\r\n\t},\r\n\tcopyIcon:{\r\n\t\tbackground: 'blueviolet',\r\n\t\tposition: 'relative',\r\n\t\ttop: '-15px',\r\n\t\theight: 'fit-content',\r\n\t},\r\n\ttypoContent:{\r\n\t\tdisplay: 'inline-block',\r\n\t\ttextAlign: 'start',\r\n\t\tappearance: 'textarea',\r\n\t\twhiteSpace: 'pre-wrap',\r\n\t\toverflowWrap: 'break-word',\r\n\t\tcolor:'black',\r\n\t\tmaxHeight:'40px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t},\r\n\ttext: {\r\n\t\tpadding: theme.spacing(2, 2, 0),\r\n\t},\r\n\tpaper: {\r\n\t\tpaddingTop: 65,\r\n\t\tminHeight:'100vh',\r\n\t\tpaddingBottom:10\r\n\t},\r\n\tlist: {\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\tgrow: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\ttemplatelist:{\r\n\t\ttextOverflow:'ellipsis'\r\n\t},\r\n\ttemplateTitle:{\r\n\t\tfontWeight: 'bold',\r\n\t\t'&:hover':{\r\n\t\t\ttextShadow:'0px 0px 1px #000000',\r\n\t\t\tcursor:'pointer'\r\n\t\t}\r\n\t},\r\n\ttruncate:{\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tborder: '1px solid #000000',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t}\r\n}));\r\nexport default useStyles;","import React, { useEffect,useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Paper,\r\n    Toolbar,\r\n    IconButton,\r\n    List,\r\n    ListItemText,\r\n    ListItem,\r\n    Avatar, \r\n    Typography,\r\n    Snackbar,\r\n} from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CopyIcon from '@material-ui/icons/FileCopy';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport api from './../util/api';\r\nimport useStyles from './style.js';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst TemplateList = (props) => {\r\n    let { id } = useParams();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [templates,setTemplates] = useState([]);\r\n\r\n    const handleSkillEdit = ()=>{\r\n      history.push('/skill/'+id+'/edit');\r\n    }\r\n    const handleTemplateAdd = ()=>{\r\n      history.push('/template/add');\r\n    }\r\n    const handleTemplateClick = (template) => {\r\n      if(template.id){\r\n        history.push('/templates/'+template.id)\r\n      }\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleCopy = (props) => {\r\n        const el = document.createElement('textarea');\r\n        el.value = props;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n        setOpen(true);  \r\n    }\r\n\tconst TemplateTitle = (props)=>{\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n                <Typography className={classes.templateTitle} style={{margin:'0px'}} onClick={()=>handleTemplateClick(props.template.template)}>\r\n                    {props.template.template.title}\r\n                </Typography>\r\n                <div className={classes.grow} />\r\n                {\r\n                    props.template.skills.map((skill)=>{\r\n                        return(\r\n                            <Avatar key={skill.id} alt={skill.name} src={skill.img_path} className={classes.small} />\r\n                        )\r\n                    })\r\n                }\r\n                <IconButton edge=\"end\" color=\"inherit\" className={classes.copyIcon} onClick={()=>handleCopy(props.template.template.content)}>\r\n                    <CopyIcon />\r\n                </IconButton>\r\n            </div>\r\n\t\t)\r\n    }\r\n    const TemplateContent = (props)=> {\r\n        return(\r\n            <Typography variant={'caption'} className={classes.typoContent}>\r\n                {props.template.template.content}\r\n            </Typography>\r\n        )\r\n    }\r\n    useEffect(()=>{\r\n      if(id){\r\n        axios.get(api.getTemplateBySkillId(id))\r\n        .then((res)=>{\r\n        //   console.log(res);\r\n          if(res.status===200){\r\n            setTemplates(res.data);\r\n          }else{\r\n            console.log(res);\r\n          }\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err);\r\n        })\r\n      }\r\n      else{\r\n        axios.get(api.getAllTemplate)\r\n        .then((res)=>{\r\n          console.log(res);\r\n          if(res.status===200){\r\n            setTemplates(res.data);\r\n          }else{\r\n            console.log(res);\r\n          }\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err);\r\n        })\r\n      }\r\n    },[id]);\r\n    return (\r\n        <Paper square className={classes.paper}>\r\n            <Toolbar>\r\n                <div className={classes.grow} />\r\n                <IconButton edge=\"start\" color=\"primary\" onClick={handleSkillEdit}>\r\n                    <EditIcon />\r\n                </IconButton>\r\n                <IconButton edge=\"end\" color=\"inherit\" onClick={handleTemplateAdd}>\r\n                    <AddIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n            <List className={classes.list}>\r\n                {templates.map((template) => {\r\n                // console.log(template.skills)\r\n                return(\r\n                    <React.Fragment key={template.template.id}>\r\n\t\t\t\t\t\t<ListItem \r\n                            style={{'border':'1px lightgrey solid'}} \r\n\t\t\t\t\t\t\tclassName={classes.templatelist} \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t>\r\n                            <ListItemText \r\n                                primary={<TemplateTitle template={template} />} \r\n\t\t\t\t\t\t\t\tsecondary={<TemplateContent template={template}/>}\r\n\t\t\t\t\t\t\t/>\r\n                            \r\n                        </ListItem>\r\n                        \r\n                    </React.Fragment>\r\n                )})}\r\n            </List>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    copied!\r\n                </Alert>\r\n            </Snackbar>\r\n        </Paper>    \r\n    )\r\n}\r\nexport default TemplateList;","import { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  paper: {\r\n    paddingTop: 65,\r\n    minHeight:'100vh',\r\n    paddingBottom:10\r\n  },\r\n  dlgpaper: {\r\n    paddingTop: 65,\r\n    paddingBottom:10\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  topappBar: {\r\n    top: 0,\r\n    bottom: 'auto',\r\n  },\r\n  bottomappBar: {\r\n    top: 'auto',\r\n    bottom:0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n  templatelist:{\r\n    textOverflow:'ellipsis'\r\n  },\r\n  skill_image:{\r\n    width:'45px',\r\n    height:'45px',\r\n    background:'#eee',\r\n    borderRadius:'50%'\r\n  },\r\n  templateInput:{\r\n  }\r\n}));\r\nexport default useStyles;","import React, { useState, useEffect } from 'react';\r\nimport { \r\n    useParams,\r\n} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Paper,\r\n    Snackbar,\r\n    TextField,\r\n} from '@material-ui/core/';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CopyIcon from '@material-ui/icons/FileCopy';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport useStyles from './style';\r\nimport api from './../util/api';\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst textRef = React.createRef();\r\nconst TemplatePage = () => {\r\n    const classes = useStyles()\r\n    const { id } = useParams();\r\n  \r\n    const [isAdd,setAdd] = useState(false);\r\n    const [skills,setSkills]  = useState([]);\r\n    const [edit,setEdit] = useState(false);\r\n    const [text,setText] = useState('');\r\n    const [title,setTitle] = useState('');\r\n    const [open, setOpen]= useState(false);\r\n  \r\n    const handleEdit = () => {\r\n      setEdit(true);\r\n    }\r\n    const handleSave = () => {\r\n      console.log(isAdd);\r\n      let sendData ={\r\n        content:text,\r\n        title:title,\r\n      };\r\n      if(isAdd){\r\n        axios.post('http://localhost:8000/api/template')\r\n          .then((res)=>{\r\n            console.log(res);\r\n          })\r\n          .catch((err)=>{\r\n            console.log(err);\r\n          })\r\n      }else{\r\n        axios.post('http://localhost:8000/api/template/'+id,sendData)\r\n          .then((res)=>{\r\n            console.log(res);\r\n          })\r\n          .catch((err)=>{\r\n            console.log(err);\r\n          })\r\n      }\r\n    }\r\n    const handleCopy = () => {\r\n      const el = document.createElement('textarea');\r\n      el.value = text;\r\n      document.body.appendChild(el);\r\n      el.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(el);\r\n      setOpen(true);  \r\n    }\r\n    const handleTextChange = (e) =>{\r\n        setText(e.target.value);\r\n    }\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n  \r\n      setOpen(false);\r\n    };\r\n    useEffect(()=>{\r\n      console.log(id)\r\n      if(id==='add'){\r\n        setAdd(true);\r\n      }else{\r\n        axios.get(api.getTemplate(id))\r\n          .then((res)=>{\r\n            if(res.status===200){\r\n              console.log(res)\r\n              setText(res.data.content);\r\n              setSkills(res.data.skill);\r\n              setTitle(res.data.title);\r\n            }\r\n          })\r\n          .catch((err)=>{\r\n            // console.log(err);\r\n          })\r\n      }\r\n    },[id])\r\n    return (\r\n      <React.Fragment>\r\n        <Paper square className={classes.paper}>\r\n        <Toolbar>\r\n            \r\n            <div className={classes.grow} />\r\n            {\r\n              skills.map((skill)=>{\r\n                return (\r\n                  <img key={skill.id} src={skill.img_path} className={classes.skill_image} alt={'d'} />\r\n                )\r\n              })\r\n            }\r\n          </Toolbar>\r\n          <TextField\r\n              fullWidth\r\n              multiline\r\n              inputRef = {textRef}\r\n              value={text}\r\n              rowsMax={20}\r\n              disabled={!edit}\r\n              onChange={handleTextChange}   \r\n            />\r\n          <Toolbar>\r\n            <Typography variant={'h6'} >\r\n            </Typography>\r\n            {edit&&\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleSave}>\r\n              <SaveIcon />\r\n            </IconButton>}\r\n            {!edit&&<IconButton edge=\"start\" color=\"inherit\" onClick={handleEdit}>\r\n              <EditIcon />\r\n            </IconButton>}\r\n            <div className={classes.grow} />\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleCopy}>\r\n              <CopyIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </Paper>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            copied!\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n    )\r\n}\r\nexport default TemplatePage;","import React from 'react';\r\n\r\nimport { \r\n\tBrowserRouter as Router ,\r\n\tRoute,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport TopAppbar from './TopAppbar/TopAppbar.js';\r\nimport SkillList from './SkillList/SkillList.js';\r\nimport TemplateList from './TemplateList/TemplateList.js';\r\nimport TemplatePage from './TemplatePage/TemplatePage.js';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nexport default function MenuAppBar() {\r\n\treturn (\r\n\t\t<Router>\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <TopAppbar/>\r\n        <Switch>\r\n          <Route path={'/skills/:id'}>\r\n            <TemplateList/>\r\n          </Route>\r\n          <Route path={'/skills'}>\r\n            <SkillList />\r\n          </Route>\r\n          <Route path={'/templates/:id'}>\r\n            <TemplatePage/>\r\n          </Route>\r\n          <Route path={'/templates'}>\r\n            <TemplateList/>\r\n          </Route>\r\n          <Route path={'/'}>\r\n            <TemplateList/>\r\n          </Route>\r\n        </Switch>\r\n      </React.Fragment>\r\n\t\t</Router>\r\n  );\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport BidTemplate from './App/BidTemplate';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <BidTemplate />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}